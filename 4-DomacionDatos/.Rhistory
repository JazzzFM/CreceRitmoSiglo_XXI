renv::activate()
renv::restore()
renv::install("tidyverse")
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
library(ggplot2)
require("maps")
gradethis::gradethis_setup()
knitr::opts_chunk$set(exercise.checker = gradethis::grade_learnr)
library(tidyverse)
as_tibble(iris)
tribble(
~x, ~y, ~z,
#--|--|----
"a", 2, 3.6,
"b", 1, 8.5
)
library(ggplot2)
max_iter=25
cl=colours()
step=seq(-2,0.8,by=0.005)
points=array(0,dim=c(length(step)^2,3))
t=0
for(a in step)
{
for(b in step+0.6)
{
x=0;y=0;n=0;dist=0
while(n<max_iter & dist<4)
{
n=n+1
newx=a+x^2-y^2
newy=b+2*x*y
dist=newx^2+newy^2
x=newx;y=newy
}
if(dist<4)
{
color=24 # black
}
else
{
color=n*floor(length(cl)/max_iter)
}
t=t+1
points[t,]=c(a,b,color)
}
}
df=as.data.frame(points)
# Can change the colors by fiddling with the following.
# last_plot() + scale_colour_manual(values=sort(c("#00000000", rainbow(23)), decreasing=FALSE))
ggplot(data=df, aes(V1, V2, color=cl[V3]))+
geom_point() +
opts(panel.background=theme_blank(),
panel.grid.major=theme_blank(),
panel.grid.minor=theme_blank(),
axis.ticks=theme_blank(),
axis.text.x=theme_blank(),
axis.text.y=theme_blank(),
axis.title.x=theme_blank(),
axis.title.y=theme_blank(), legend.position = 'none')
ggsave('mandelbrot_ggplot2.png')
print('Image Saved.')
dev.off()
# O bien
library(readr)
# O bien
library(tibble)
heights <- read_csv("data/heights.csv")
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
library(ggplot2)
require("maps")
gradethis::gradethis_setup()
knitr::opts_chunk$set(exercise.checker = gradethis::grade_learnr)
heights <- read_csv("data/heights.csv")
# heights <- read_csv("data/heights.csv")
heights <- read_csv("data/heights.csv")
read_csv("a,b,c
1,2,3
4,5,6")
read_csv("The first line of metadata
The second line of metadata
x,y,z
1,2,3", skip = 2)
read_csv("# A comment I want to skip
x,y,z
1,2,3", comment = "#")
library(learnr)
library(gradethis)
library(learnrhash)
library(ggplot2)
gradethis::gradethis_setup()
knitr::opts_chunk$set(exercise.checker = gradethis::grade_learnr)
filter(flights, carrier %in% c("AA", "DL", "UA"))
filter(flights, month == 11 | month == 12)
library(nycflights13)
library(dplyr)
library(nycflights13)
library(dplyr)
flights
filter(flights, month == 1, day == 1)
sqrt(2) ^ 2 == 2
1 / 49 * 49 == 1
near(sqrt(2) ^ 2,  2)
near(1 / 49 * 49, 1)
filter(flights, month == 11 | month == 12)
filter(flights, month %in% c(11,12))
filter(flights, !(arr_delay > 120 | dep_delay > 120))
filter(flights, arr_delay <= 120, dep_delay <= 120)
NA > 1
1 == NA
NA + 1
NA / 1
NA == NA
is.na(NA)
bd <-  tibble(x = c(1:3, NA))
filter(bd, x > 2)
filter(bd, x > 2 | is.na(x))
library(learnr)
library(gradethis)
library(learnrhash)
library(tidyverse)
library(ggplot2)
require("maps")
gradethis::gradethis_setup()
knitr::opts_chunk$set(exercise.checker = gradethis::grade_learnr)
read_csv("1,2,3\n4,5,6", col_names = FALSE)
read_csv("a,b,c\n1,2,.", na = ".")
read_delim(file, delim = "|")
df <- data.frame(abc = 1, xyz = "a")
df$x
df[, "xyz"]
df[, c("abc", "xyz")]
intersect(names(formals(read_csv)), names(formals(read_tsv)))
x <- "x,y\n1,'a,b'"
read_delim(x, ",", quote = "'")
x <- "x,y\n1,'a,b'"
read_delim(x, ",", quote = ",")
x <- "x,y\n1,'a,b'"
read_delim(x, ",", quote = "'")
intersect(names(formals(___)), names(formals(___)))
x <- parse_integer(c("123", "345", "abc", "123.45"))
x
problems(x)
